buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.3'
    }
}
apply plugin: 'android'

android {
    compileSdkVersion 'android-21'
    buildToolsVersion '24.0.2'

    defaultConfig {
        minSdkVersion 21
        multiDexEnabled true
    }

    sourceSets {
        main {
            java.srcDirs += 'src/frege'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.frege-lang:frege:3.23.401-g7c45277'
    compile 'com.android.support:multidex:1.0.0'
}

clean {
    delete 'src/frege'
}

// http://permalink.gmane.org/gmane.comp.lang.frege.general/1083

project.afterEvaluate {
    extensions.compileFrege = {
        mkdir 'src/frege'
        description = 'Compile Frege to Java'
        ['FregeAndroid/src', 'src/main/frege'].each { sp ->
            def spAbs = (new File(sp)).getAbsolutePath()
            def tree = fileTree(dir: sp, include: '**/*.fr')
            tree.each { file ->
                javaexec {
                    configurations.compile.resolve().each {
                        classpath += files(it.toString())
                    }
                    main = 'frege.compiler.Main'
                    def a = ['-inline', '-d', 'src/frege', '-make', '-fp', '/Users/ppelleti/Library/Android/sdk/platforms/android-21/android.jar', '-sp', spAbs, file.path]
                    println 'Frege compiler args: "' + a.join(' ') + '"'
                    args (*a)
                }
            }
        }
//        delete fileTree('src/frege') {
//            include '**/*.java'
//        }
    }

    compileDebugJavaWithJavac.doFirst { compileFrege() }
    compileReleaseJavaWithJavac.doFirst { compileFrege() }
    // compileDebugJavaWithJack.doFirst { compileFrege() }
    // compileReleaseJavaWithJack.doFirst { compileFrege() }
}
